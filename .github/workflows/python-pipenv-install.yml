name: Reusable python workflow

on:
  workflow_call:
    inputs:
      python_version:
        default: '3.9'
        required: false
        type: string
      test_script:
        required: false
        type: string
      deploy_script:
        required: false
        type: string
      setup_mongo:
        default: false
        required: false
        type: boolean
      setup_redis:
        default: false
        required: false
        type: boolean
      pypi_release:
        default: false
        required: false
        type: boolean
      aws_region:
        required: false
        default: "ap-southeast-1"
        type: string
    secrets:
      pipy_registry_auth:
        required: false
      slack_webhook_url:
        description: "notify slack on github action result"
        required: false
      aws_key_id:
        required: false
      aws_secret:
        required: false


jobs:
  pipenv_setup_test_job:
    name: Pass input and secrets to my-action
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: wangsha/action-pipenv-setup@main
      - name: linting
        uses: psf/black@stable
        with:
          options: "--check --verbose"
      - name: detect-secrets
        uses: reviewdog/action-detect-secrets@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review # Change reporter.
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          locale: "US/UK"
      - uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-pr-review
          # Change reporter level if you need.
          # GitHub Status Check won't become failure with warning.
          level: warning
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python_version }}
      - name: install pipenv
        run: pip3 install pipenv
      - name: Cache pipenv packages
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ env.pythonLocation }}-${{ runner.os }}-build-${{ hashFiles('**/Pipfile.lock') }}
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          echo github ref: ${{ github.ref }}
          echo pipenv-cache hit: ${{ steps.cache-pipenv.outputs.cache-hit }}
      - name: install package
        run: pipenv install --dev --keep-outdated
        env:
          REGISTRY_AUTH: ${{ secrets.pipy_registry_auth }}
      - uses: supercharge/redis-github-action@1.4.0
        if: inputs.setup_redis
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        if: inputs.setup_mongo
      - name: run test
        if: inputs.test_script
        run: ${{ inputs.test_script }}
      - name: deploy
        if: inputs.deploy_script
        run: ${{ inputs.deploy_script }}
      - name: bumpversion
        if: endsWith(github.ref, '/main')
        uses: jaumann/github-bumpversion-action@v0.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release on main branch
        if: endsWith(github.ref, '/main') && inputs.pypi_release
        uses: wangsha/action-s3pypi@main
        with:
          args: "--bucket pipy.detalytics.com -v"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
      - name: Add Changelog
        if: endsWith(github.ref, '/main')
        uses: charity-detalytics/changelog-ci@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }} # required
        if: always()

